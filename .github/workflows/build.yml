name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-macos:
    name: macOS (macOS/iOS/Android)
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - platform: macos
          - platform: ios
          - platform: android
            arch: arm64
          - platform: android
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - run: flutter pub get
      - run: cd example && flutter pub get

      - name: Build macOS
        if: matrix.platform == 'macos'
        run: cd example && flutter build macos --release

      - name: Build iOS
        if: matrix.platform == 'ios'
        run: cd example && flutter build ios --release --no-codesign

      - name: Build Android
        if: matrix.platform == 'android'
        run: cd example && flutter build apk --release --target-platform android-${{ matrix.arch }} --split-per-abi

  build-linux:
    name: Linux (Linux/Android)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux
          - platform: android
            arch: arm64
          - platform: android
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Setup Java
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: flutter pub get
      - run: cd example && flutter pub get

      - name: Enable Linux desktop
        if: matrix.platform == 'linux'
        run: flutter config --enable-linux-desktop

      - name: Build Linux
        if: matrix.platform == 'linux'
        run: cd example && flutter build linux --release

      - name: Build Android
        if: matrix.platform == 'android'
        run: cd example && flutter build apk --release --target-platform android-${{ matrix.arch }} --split-per-abi

  build-windows:
    name: Windows (Windows/Android)
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - platform: windows
          - platform: android
            arch: arm64
          - platform: android
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Setup Java
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - run: flutter pub get
      - run: cd example && flutter pub get

      - name: Enable Windows desktop
        if: matrix.platform == 'windows'
        run: flutter config --enable-windows-desktop

      - name: Build Windows
        if: matrix.platform == 'windows'
        run: cd example && flutter build windows --release

      - name: Build Android
        if: matrix.platform == 'android'
        run: cd example && flutter build apk --release --target-platform android-${{ matrix.arch }} --split-per-abi
